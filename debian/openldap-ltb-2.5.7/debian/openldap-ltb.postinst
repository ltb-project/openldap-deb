#!/bin/bash

set -e

BASEDIR=$(dirname $0)
source $BASEDIR/openldap-ltb.vars


# Create user and group
if ! getent group ldap > /dev/null 2>&1 ; then
  addgroup --system ${LDAPGROUP}
else
  if ! grep -q -E "^ldap:" /etc/group ; then
    echo "WARN: ${LDAPGROUP} group exists but is not a local group. This may cause slapd malfunction"
  fi
fi
if ! getent passwd ldap > /dev/null 2>&1 ; then
  adduser --system --no-create-home --home /usr/local/openldap --ingroup ${LDAPGROUP} ${LDAPUSER}
else
  if ! grep -q -E "^ldap:" /etc/passwd ; then
    echo "WARN: ${LDAPGROUP} user exists but is not a local user. This may cause slapd malfunction"
  fi
fi

# Add syslog facility
if [ -e "/etc/rsyslog.conf" ]; then
  grep -q "${LDAPLOGFILE}" /etc/rsyslog.conf || echo "local4.*  -${LDAPLOGFILE}" >> /etc/rsyslog.conf
fi

if command -v initctl >/dev/null && initctl list | grep -q rsyslog; then
	# compatibility with ubuntu
	initctl restart rsyslog
else
	if [ -x "/etc/init.d/rsyslog" ]; then
		/etc/init.d/rsyslog restart > /dev/null 2>&1
	fi
fi


# Create some dirs and change owner
mkdir -p ${LDAPDATADIR}
mkdir -p ${LDAPBACKUPDIR}

#Â Globally set owner to root:root
chown root:root ${LDAPSERVERDIR}
chown -R root:root ${LDAPSERVERDIR}/bin
chown -R root:root ${LDAPSERVERDIR}/etc/openldap/{ldap.conf,ldap.conf.default,schema,slapd.conf.default,slapd.ldif,slapd.ldif.default}
chown -R root:root ${LDAPSERVERDIR}/include
chown -R root:root ${LDAPSERVERDIR}/lib*
chown -R root:root ${LDAPSERVERDIR}/libexec
chown -R root:root ${LDAPSERVERDIR}/sbin
chown root:root ${LDAPSERVERDIR}/var

# Specifically adapt some files/directories owner and permissions
chown -R ${LDAPUSER}:${LDAPGROUP} ${LDAPDATADIR}
chown -R ${LDAPUSER}:${LDAPGROUP} ${LDAPBACKUPDIR}
chown -R ${LDAPUSER}:${LDAPGROUP} ${LDAPSERVERDIR}/var/run
chown -R root:${LDAPGROUP} ${LDAPSERVERDIR}/etc/openldap/slapd.conf
chmod 640 ${LDAPSERVERDIR}/etc/openldap/slapd.conf

# Add configuration directory if it does not exist
mkdir -p ${LDAPCONFDIR}
chown root:${LDAPGROUP} ${LDAPCONFDIR}
chmod 770 ${LDAPCONFDIR}

# Empty configuration directory, so import a new fresh config from template
if [ -z "$( ls -A ${LDAPCONFDIR} )" ]; then

  # Import slapd.conf from template
  ${SLAPD_CLI_BIN} importflatconfigtemplate

  # convert the slapd.conf file to cn=config format
  rm -f "${LDAPSERVERDIR}/etc/openldap/cn=config.ldif"
  ${SLAPD_CLI_BIN} convertconfig "${LDAPSERVERDIR}/etc/openldap/slapd.conf" "${LDAPSERVERDIR}/etc/openldap/cn=config.ldif"

  # build a new ldif configuration template from the previous cn=config.ldif file
  rm -f "${SLAPD_CLI_LDIF_CONFIG_TEMPLATE}"
  ${SLAPD_CLI_BIN} buildconfigtemplate "${LDAPSERVERDIR}/etc/openldap/cn=config.ldif" "${SLAPD_CLI_LDIF_CONFIG_TEMPLATE}"
  rm -f "${LDAPSERVERDIR}/etc/openldap/cn=config.ldif"

  # import ldif configuration from ldif template
  ${SLAPD_CLI_BIN} importldifconfigtemplate

fi


if ! type "systemctl" > /dev/null 2>&1; then
  # No SYSTEMD available
  # do not start on boot
  # do not start slapd process now
  echo && exit $?
else
  # Assume SYSTEMD
  
  # Start slapd at startup
  systemctl enable ${SYSTEMD_SERVICE_NAME} || exit $?

  # If this is slapd first installation or if slapd was started before
  if [ ! -f /var/openldap-ltb-slapd-stopped ]; then
    # Start slapd
    systemctl start ${SYSTEMD_SERVICE_NAME} || exit $?
  fi
  rm -f /var/openldap-ltb-slapd-stopped
fi

